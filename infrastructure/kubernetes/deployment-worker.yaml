apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitor-legislativo-worker
  namespace: monitor-legislativo
  labels:
    app: monitor-legislativo
    component: worker
    version: v4.0.0
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: monitor-legislativo
      component: worker
  template:
    metadata:
      labels:
        app: monitor-legislativo
        component: worker
        version: v4.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: monitor-legislativo-worker
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: worker
        image: monitor-legislativo/worker:v4.0.0
        imagePullPolicy: Always
        command: ["python", "-m", "core.workers.document_monitor"]
        ports:
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        - name: WORKER_TYPE
          value: "document_monitor"
        - name: WORKER_CONCURRENCY
          value: "10"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: monitor-legislativo-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: monitor-legislativo-secrets
              key: redis-url
        - name: ELASTICSEARCH_URL
          valueFrom:
            secretKeyRef:
              name: monitor-legislativo-secrets
              key: elasticsearch-url
        envFrom:
        - configMapRef:
            name: monitor-legislativo-config
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 2Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir:
          sizeLimit: 512Mi
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - monitor-legislativo
                - key: component
                  operator: In
                  values:
                  - worker
              topologyKey: kubernetes.io/hostname
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitor-legislativo-scheduler
  namespace: monitor-legislativo
  labels:
    app: monitor-legislativo
    component: scheduler
    version: v4.0.0
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: monitor-legislativo
      component: scheduler
  template:
    metadata:
      labels:
        app: monitor-legislativo
        component: scheduler
        version: v4.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: monitor-legislativo-worker
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: scheduler
        image: monitor-legislativo/worker:v4.0.0
        imagePullPolicy: Always
        command: ["python", "-m", "core.workers.scheduler"]
        ports:
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        - name: WORKER_TYPE
          value: "scheduler"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: monitor-legislativo-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: monitor-legislativo-secrets
              key: redis-url
        envFrom:
        - configMapRef:
            name: monitor-legislativo-config
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: tmp
        emptyDir: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: monitor-legislativo-worker
  namespace: monitor-legislativo
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/monitor-legislativo-worker-sa