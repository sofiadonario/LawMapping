[project]
name = "monitor-legislativo"
version = "4.0.0"
description = "Legislative monitoring system for Brazilian government data"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Monitor Legislativo Team", email = "team@monitorlegislativo.com"}
]
dependencies = [
    "flask>=2.3.0",
    "requests>=2.31.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.11.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "celery>=5.3.0",
    "redis>=4.6.0",
    "beautifulsoup4>=4.12.0",
    "pandas>=2.0.0",
    "openpyxl>=3.1.0",
    "reportlab>=4.0.0",
    "jinja2>=3.1.0",
    "werkzeug>=2.3.0",
    "pyjwt>=2.8.0",
    "bcrypt>=4.0.0",
    "flask-cors>=4.0.0",
    "python-dateutil>=2.8.0",
    "aiohttp>=3.8.0",
]

[project.optional-dependencies]
desktop = [
    "PySide6>=6.5.0",
    "PyQt6>=6.5.0",
]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "pytest-xdist>=3.3.0",
    "factory-boy>=3.3.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
    "pre-commit>=3.3.0",
]

[project.scripts]
monitor-legislativo = "launch:main"
monitor-web = "web.__main__:main"
monitor-desktop = "desktop.__main__:main"

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers", 
    "--cov=core",
    "--cov=web",
    "--cov=desktop",
    "--cov-branch",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=60",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow tests",
    "security: Security tests",
    "api: API tests",
    "auth: Authentication tests",
    "desktop: Desktop app tests",
    "web: Web app tests",
]

[tool.coverage.run]
source = ["core", "web", "desktop"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
    "*/venv/*",
    "*/migrations/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "R0903",  # too-few-public-methods
    "R0801",  # duplicate-code
]

[tool.bandit]
exclude_dirs = ["tests", "venv"]
skips = ["B101", "B601"]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"